name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Lints"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm lint

  test:
    name: "Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
      - run: pnpm build:test
        working-directory: test-app
      - name: Run Tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 5
          command: cd test-app && pnpm run test 

  floating:
    name: "Floating Dependencies"
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - uses: actions/checkout@v4
      - uses: wyvox/action-setup-pnpm@v3
        with:
          args: --no-lockfile
      - run: pnpm build:test
        working-directory: test-app
      - name: Run Tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 2
          max_attempts: 5
          command: cd test-app && pnpm run test 

  setup:
    name: 'Prepare Try Scenarios'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
      - id: set-matrix
        run: |
          echo "matrix=$(pnpm -s dlx @embroider/try list)" >> $GITHUB_OUTPUT


  try-scenarios:
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}

    name: "${{ matrix.name }}"

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
      - run: pnpm dlx @embroider/try apply ${{ matrix.name }}
        working-directory: 'test-app'
      - run: pnpm install --no-lockfile
      - run: pnpm test:ci
        env: ${{ matrix.env }}
        working-directory: 'test-app'
